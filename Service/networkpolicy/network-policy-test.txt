Working with network policies :
 
Create two busy box containers:
	# kubectl run --generator=run-pod/v1 busybox1 --image=busybox -- sleep 3600
	# kubectl run --generator=run-pod/v1 busybox2 --image=busybox -- sleep 3600

Create network policy:

cat << EOF | kubectl apply -f -
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all
  namespace: default
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
EOF

Create crd's:

cat << EOF | kubectl apply -f -
apiVersion: crd.projectcalico.org/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-from-out
spec:
    ingress:
    - action: allow
      source:
        selector: test == 'out'
EOF

cat << EOF | kubectl apply -f -
apiVersion: crd.projectcalico.org/v1
kind: GlobalNetworkPolicy
metadata:
  name: allow-egress-to-in
spec:
    egress:
    - action: allow
      destination:
        selector: test == 'in'
EOF

Apply labels on pods:

kubectl label pod busybox1 test=in
kubectl label pod busybox2 test=out

At the end you can see traffic from busybox2 to busybox1 is allowed, all other traffic blocked


